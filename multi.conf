input {

    beats {
	port => 5044
	type => log
	}


    file {
		path => "/opt/pubmed*.xml"
		start_position => "beginning"
		sincedb_path => "/dev/null"
		type => pubmed
		codec => multiline {
		pattern => "<PubmedArticle>|</PubmedArticleSet>"
		negate => true
		what => "previous"
			}
		}
	
	
    syslog {
		host => "0.0.0.0"
		port => "5514"
		type => "syslog"
        }
		
}



filter {
	if [type] == "log" {
			
			if [message] =~ "^<\?xml .*"
				{
				 drop {}
				}

				else if [message] =~ "^<!DOCTYPE .*"
				{
				 drop {}
				}

				else if [message] =~ "^<PubmedArticle>"
				{
				 drop {}
				}
			else if [message] =~ "^</PubmedArticleSet>"
				{
			 drop {}
				}



			xml {
				source => "message"
				target => "citation"
				force_array => false
			}

			
			if [citation][MedlineCitation][Article][Abstract][AbstractText][content] {
				mutate {
				add_field => { "abstract" => "%{[citation][MedlineCitation][Article][Abstract][AbstractText][content]}" }
				}
			}



			mutate {
				add_field => { "title" => "%{[citation][MedlineCitation][Article][ArticleTitle]}" }
				add_field => { "Cdate" => "%{[citation][MedlineCitation][DateCompleted][Year]}-%{[citation][MedlineCitation][DateCompleted][Month]}-%{[citation][MedlineCitation][DateCompleted][Day]}" }
				add_field => { "Rdate" => "%{[citation][MedlineCitation][DateRevised][Year]}-%{[citation][MedlineCitation][DateRevised][Month]}-%{[citation][MedlineCitation][DateRevised][Day]}" }
				add_field => { "pmid" => "%{[citation][MedlineCitation][PMID][content]}" }
				add_field => { "path" => "%{[log][file][path]}" }
				add_field => { "country" => "%{[citation][MedlineCitation][MedlineJournalInfo][Country]}" }
				add_field => { "hostname" => "%{[host][name]}" }
				add_field => { "ip" => "%{[host][ip][0]}" }
				add_field => { "lang" => "%{[citation][MedlineCitation][Article][Language]}" }
				remove_field => ["host"]
			}
			
			date {
				match => ["Cdate", "yyyy-MM-dd"]
				timezone => "Asia/Seoul"
				target => "Cdate"
			}
	}
	
		else if [type] == "syslog" {
		
			grok {
				match => { "message" => "%{GREEDYDATA:action} (?:for) %{NOTSPACE:id} (?:from) %{IPV4:src_ip} (?:port) %{NOTSPACE:port} %{NOTSPACE:protocol}" }
				}
			mutate {
				rename => ["host", "dst_ip"]
				}
			}
}
		



output {

	if [type] == "log" {

        jdbc {
		driver_jar_path => "/usr/share/logstash/vendor/jre/jdbc/mariadb-java-client-2.7.3.jar"
		#driver_class => "org.mariadb.jdbc.Driver"
				
		##원격지일경우 localhost부분을 IP로 변경
		connection_string => "jdbc:mariadb://localhost/ggulb?user=ggulb&password=ggulb"
		statement => [ "insert into pubmed(Cdate, Rdate, path, pmid, country, hostname, ip, lang, message) values(?, ?, ?, ?, ?, ?, ?, ?, ?)", "Cdate", "Rdate", "path", "pmid", "country", "hostname", "ip", "lang","message" ]
			}

        elasticsearch {
                hosts => "localhost:9200"
                index => "pubmed"
                }

	}
	


	else if [type] == "syslog" {
	
        jdbc {
		driver_jar_path => "/usr/share/logstash/vendor/jre/jdbc/mariadb-java-client-2.7.3.jar"
		#driver_class => "org.mariadb.jdbc.Driver"
				
		##원격지일경우 localhost부분을 IP로 변경
		connection_string => "jdbc:mariadb://localhost/ggulb?user=ggulb&password=ggulb"
		statement => [ "insert into syslog(timestamp, src_ip, id, port, protocol, action, dst_ip, message) values(?, ?, ?, ?, ?, ?, ?, ?)", "timestamp", "src_ip", "id", "port", "protocol", "action", "dst_ip", "message" ]
			}

        elasticsearch {
                hosts => "localhost:9200"
                index => "syslog"
                }

	}

	stdout { codec => rubydebug  }

}